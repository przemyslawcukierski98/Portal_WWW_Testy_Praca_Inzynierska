@page "/exam-to-be-assessed/{GuidParam}"
@using OnlineTesty_Library.Models
@inject OnlineTesty_Library.Repositories.IExamRepositories ExamService
@inject OnlineTesty_Library.Repositories.IExamQuestionsRepositories ExamQuestionService
@inject OnlineTesty_Library.Repositories.IStudentTestSolutionRepositories StudentTestSolutionService
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "Lecturer")]

<h3>Egzamin przeznaczony do oceny</h3>
<br />

<style>
    .list {
        list-style-type: none;
        padding: 0;
        margin: 0;
    }

    .exam-record {
        border: 1px solid #ddd;
        margin-top: -1px; /* Prevent double borders */
        background-color: white;
        color: black;
        padding: 12px;
    }

    .exam-question-record {
        border: 1px solid #ddd;
        margin-top: -1px; /* Prevent double borders */
        background-color: white;
        color: black;
        padding: 12px;
    }
</style>

<EditForm Model="@exam">
    <div>
        <ul class="list">
            <li class="exam-record"><b>Nazwa egzaminu:</b> @exam.Name</li>
            <li class="exam-record"><b>Opis egzaminu:</b> @exam.Description</li>
            <li class="exam-record"><b>Nazwa grupy studenckiej:</b> @exam.StudentGroupName</li>
            <li class="exam-record"><b>Status egzaminu:</b> @exam.ExamStatus</li>
        </ul>
        <br /><br />
    </div>
</EditForm>

<EditForm Model="@examQuestions">
    <div>
        @foreach (var item in ExamQuestionService.ReadAllQuestionsByExam(ExamId))
        {
        <ul class="list">
            <li class="exam-question-record"><b>@item.Question</b></li>
            <li class="exam-question-record">A: @item.AnswerA</li>
            <li class="exam-question-record">B: @item.AnswerB</li>
            <li class="exam-question-record">C: @item.AnswerC</li>
            <li class="exam-question-record">D: @item.AnswerD</li>
            <li class="exam-question-record"><i>Poprawna odpowiedź: @item.CorrectAnswerChar</i></li>
            <li class="exam-question-record"><i>Odpowiedź studenta: @studentAnswerCodes.ElementAt(item.Order)</i></li>
        </ul>
            <br /><br />
        }
    </div>
</EditForm>

@code {
    private Exam exam = new Exam();
    private IEnumerable<ExamQuestion> examQuestions;
    private StudentTestSolution solution = new StudentTestSolution();
    private List<char> studentAnswerCodes = new List<char>();

    private string[] answersCodesPom = { };
    private char separator = '/';

    [Parameter]
    public string GuidParam { get; set; }
    public Guid ExamId { get; set; }

    protected override void OnInitialized()
    {
        solution = StudentTestSolutionService.GetSolution(Guid.Parse(GuidParam));
        exam = ExamService.Read(solution.ExamId);
        // czy jest mi to potrzebne?
        examQuestions = ExamQuestionService.ReadAllQuestionsByExam(solution.ExamId);

        ExamId = solution.ExamId;

        answersCodesPom = solution.StudentAnswersCode.Split(separator);

        for(int i=0; i<answersCodesPom.Length-1; i++)
        {
            char answerChar = answersCodesPom[i].Last();
            studentAnswerCodes.Add(answerChar);
        }
    }
}
