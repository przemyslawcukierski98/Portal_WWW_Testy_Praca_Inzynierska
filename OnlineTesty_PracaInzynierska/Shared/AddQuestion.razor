@page "/add-question"
@using OnlineTesty_Library.Models
@inject IJSRuntime JsRuntime
@inject OnlineTesty_Library.Repositories.IExamQuestionsRepositories ExamQuestionsService
@inject Blazored.LocalStorage.ILocalStorageService sessionStorage
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "Lecturer")]

<style>
    .btnCreateExamEnding_style {
        box-shadow: inset 0px 39px 0px -24px #e67a73;
        background: linear-gradient(to bottom, #e4685d 5%, #eb675e 100%);
        background-color: #e4685d;
        display: inline-block;
        cursor: pointer;
        color: #ffffff;
        font-family: Arial;
        font-size: 15px;
        padding: 5px 10px;
        text-decoration: none;
        text-shadow: 0px 1px 50px #b23e35;
    }

    .btnCreateExamEnding_style:hover {
        background: linear-gradient(to bottom, #eb675e 5%, #e4685d 100%);
        background-color: #eb675e;
    }

    .btnCreateExamEnding_style:active {
        position: relative;
        top: 1px;
    }
</style>

<h3>Dodaj pytanie do egzaminu</h3>
<EditForm Model="@examQuestion" OnValidSubmit="SubmitExamQuestion">
    <div class="form-group">
        <label for="question">Treść pytania</label>
        <InputText id="question" @bind-Value="examQuestion.Question" class="form-control" />
    </div>
    <div class="form-group">
        <label for="description">Dodatkowy opis pytania</label>
        <InputText id="description" @bind-Value="examQuestion.AdditiondalDescription" class="form-control" />
    </div>
    <div class="form-group">
        <label for="answer-a">Odpowiedź A</label>
        <InputText id="answer-a" @bind-Value="examQuestion.AnswerA" class="form-control" />
    </div>
    <div class="form-group">
        <label for="answer-b">Odpowiedź B</label>
        <InputText id="answer-b" @bind-Value="examQuestion.AnswerB" class="form-control" />
    </div>
    <div class="form-group">
        <label for="answer-c">Odpowiedź C</label>
        <InputText id="answer-c" @bind-Value="examQuestion.AnswerC" class="form-control" />
    </div>
    <div class="form-group">
        <label for="answer-d">Odpowiedź D</label>
        <InputText id="answer-d" @bind-Value="examQuestion.AnswerD" class="form-control" />
    </div>
    <div class="form-group">
        <label for="correct-answer">Poprawna odpowiedź</label>
        <InputText id="answer-correct" @bind-Value="examQuestion.CorrectAnswerChar" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Dodaj pytanie</button><br /><br/>
    <input class="btnCreateExamEnding_style" type="button" name="btnCreateExamEnding" value="Zatwierdź nowy egzamin" @onclick="eventArgs => { CreateExamEnding(); }">
</EditForm>

@code {

    private ExamQuestion examQuestion = new ExamQuestion();
    private int questionIdPom = 0;

    protected EventCallback CreateExamEnding()
    {
        NavigationManager.NavigateTo("main-page-lecturer");

        return EventCallback.Empty;
    }

    async Task SubmitExamQuestion()
    {
        examQuestion.ID = Guid.NewGuid();
        examQuestion.ExamID = await sessionStorage.GetItemAsync<Guid>("idExam");
        examQuestion.Order = questionIdPom;
        var result = ExamQuestionsService.Create(examQuestion);
        questionIdPom++;

        await JsRuntime.InvokeVoidAsync("alert", "Pytanie zostało dodane pomyślnie");
    }
}
