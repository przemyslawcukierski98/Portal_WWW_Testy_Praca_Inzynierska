@using OnlineTesty_Library.Models
@inject OnlineTesty_Library.Repositories.ILecturerProfileDetailsRepositories LecturerProfileDetailsService 
@inject IJSRuntime JsRuntime

@page "/profile-lecturer-details"

@attribute [Authorize(Roles = "Lecturer")]

<h3>Szczegóły konta użytkownika</h3>
<br />

<EditForm Model="@lecturerProfileDetails" OnValidSubmit="AddLecturerDetails">

    <div class="form-group">
        <label for="name">Imię</label><br />
        <InputText disabled="@FieldsDisabled" id="Name" @bind-Value="lecturerProfileDetails.FirstName" class="form-control" />
    </div>
    <div class="form-group">
        <label for="name">Nazwisko</label><br />
        <InputText disabled="@FieldsDisabled" id="Name" @bind-Value="lecturerProfileDetails.LastName" class="form-control" />
    </div>

    <button type="submit" disabled="@FieldsDisabled" class="btn btn-primary">Przypisz studenta do grupy</button>
</EditForm>


@code {
    private LecturerProfileDetails lecturerProfileDetails = new LecturerProfileDetails();
    protected bool FieldsDisabled;

    protected override void OnInitialized()
    {
        if (LecturerProfileDetailsService.WhetherEmailIsInTheDb(lecturerProfileDetails))
        {
            FieldsDisabled = true;
        }
    }

    async Task AddLecturerDetails()
    {
        var result = LecturerProfileDetailsService.AssignProfileDetailsToLecturer(lecturerProfileDetails);
        await JsRuntime.InvokeVoidAsync("alert", "Dane wykładowcy zostały przypisane poprawnie do konta");
    }
}
