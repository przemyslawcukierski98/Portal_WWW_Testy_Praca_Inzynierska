@page "/evaluated-exams"

@using OnlineTesty_Library.Models
@inject OnlineTesty_Library.Repositories.IStudentTestResultRepositories StudentTestResultService

@attribute [Authorize(Roles = "Lecturer")]

<h3>Ocenione egzaminy</h3>
<br />

<style>
    .list {
        list-style-type: none;
        padding: 0;
        margin: 0;
    }

    .group-record {
        border: 1px solid #ddd;
        margin-top: -1px; /* Prevent double borders */
        background-color: white;
        color: black;
        padding: 12px;
    }

    .button {
        background-color: #4CAF50; /* Green */
        border: none;
        color: white;
        padding: 16px 32px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        margin: 4px 2px;
        transition-duration: 0.4s;
        cursor: pointer;
    }

    .details-button {
        background-color: #008CBA;
        color: white;
        border: 2px solid #008CBA;
    }

        .details-button:hover {
            background-color: white;
            color: black;
        }

    .remove-button {
        background-color: #f44336;
        color: white;
        border: 2px solid #f44336;
    }

        .remove-button:hover {
            background-color: white;
            color: black;
        }
</style>

<EditForm Model="@filter">
    <div class="form-group">
        <label for="Question">Nazwa egzaminu</label>
        <InputText id="NameFilter" @bind-Value="filter.NameFilter" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Question">Nazwisko studenta</label>
        <InputText id="StudentFilter" @bind-Value="filter.StudentFilter" class="form-control" />
    </div>
</EditForm>

<input class="btnCreateExamEnding_style" type="button" name="btnCreateExamEnding" value="Filtruj" @onclick="eventArgs => { CreateFilter(); }">
<br />
<br />

<EditForm Model="@result">
    <ul class="list">
        @foreach (var result in StudentTestResultService.FindEvaluatedExamsForLecturer(nameFilter, studentFilter))
        {
            <li class="group-record"><a href="/single-evaluated-exam/@result.ID">Student: @result.StudentEmail, Tytuł: @result.ExamTitle</a></li>
        }
    </ul>
</EditForm>

@code {
    private new StudentTestResult result = new StudentTestResult();
    private ExamFilter filter = new ExamFilter();
    private string nameFilter;
    private string studentFilter;

    protected void CreateFilter()
    {
        nameFilter = filter.NameFilter;
        studentFilter = filter.StudentFilter;
    }
}